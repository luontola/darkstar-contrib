#summary RPC API for simplified communication between Darkstar server and clients
#labels Phase-Deploy

= Introduction =

With this library it is possible to call methods on remote objects almost as if they were local objects. You need to define an interface for your RPC service and register an instance implementing that interface. Then you can query from the remote side for that service. Two-way communication is supported - the client can call RPC services on the server, and the server can call RPC services on the client.

All method calls are handled asynchronously. If the method needs to return a value, you may obtain the response (returned value or thrown exception) through a [http://java.sun.com/javase/6/docs/api/java/util/concurrent/Future.html Future]. Void methods will not send a response when they are executed, so you can use void methods to create a message passing style API.


== Using Maven ==

To use the RPC library in a Maven project, add the following dependency to your pom.xml:

{{{
    <repositories>
        <repository>
            <id>orfjackal</id>
            <url>http://repo.orfjackal.net/maven2</url>
        </repository>
    </repositories>
    <dependencies>
        <dependency>
            <groupId>net.orfjackal.darkstar-contrib</groupId>
            <artifactId>darkstar-rpc</artifactId>
            <version>1.0</version>
        </dependency>
    </dependencies>
}}}


== Example Application ==

See [http://code.google.com/p/darkstar-contrib/source/browse/trunk/darkstar-rpc-example/ darkstar-rpc-example] for an example of how to use the RPC library with Darkstar. You can download its sources and pre-built binaries from the [http://code.google.com/p/darkstar-contrib/downloads/list downloads page].

To build it from sources with Maven, use the command "mvn verify". The /target directory will contain the server application (darkstar-rpc-example-1.0-server.zip) and an executable client jar (darkstar-rpc-example-1.0-jar-with-dependencies.jar).

The test sources of [http://code.google.com/p/darkstar-contrib/source/browse/trunk/darkstar-rpc/ darkstar-rpc] may also be useful as examples.


== Links ==

  * SVN: http://darkstar-contrib.googlecode.com/svn/trunk/darkstar-rpc/ http://darkstar-contrib.googlecode.com/svn/trunk/darkstar-rpc-example/
  * Original discussion thread: [http://www.projectdarkstar.com/component/option,com_smf/Itemid,99999999/topic,470.0 Remote Procedure Calls (RPC) and Darkstar]
  * Developer: [http://www.orfjackal.net/ Esko Luontola] (Jackal von Ã–RF)